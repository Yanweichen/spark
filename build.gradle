buildscript {
    ext {
        kotlinVersion = '1.2.41'
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath('com.google.protobuf:protobuf-gradle-plugin:0.8.5')
    }
}

apply plugin: 'scala'
apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.google.protobuf'

group = 'com.ywc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

sourceSets {
    main {
        java { srcDir "src/main/kotlin" }
        scala { srcDir "src/main/kotlin" }
        proto { srcDir 'src/main/kotlin' }
    }
    test {
        java { srcDir "src/test/kotlin" }
        scala { srcDir "src/main/kotlin" }
        proto { srcDir 'src/test/kotlin' }
    }
}

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    mavenCentral()
}

dependencies {
    compile('org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.5')
    compile('org.scala-lang:scala-library:2.11.4')
    compile("org.scala-lang:scala-compiler:2.11.4")
    compile("org.scala-lang:scala-reflect:2.11.4")
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'slf4j-log4j12'
    }
    compile('tk.mybatis:mapper-spring-boot-starter:2.0.3-beta1')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    compile('org.mariadb.jdbc:mariadb-java-client:2.2.5')
    compile('com.alibaba:druid-spring-boot-starter:1.1.9')
    compile('com.google.protobuf:protobuf-java:3.5.1')
    //kafka
    compile('org.springframework.kafka:spring-kafka:2.1.6.RELEASE')
    compile('org.apache.spark:spark-streaming-kafka-0-10_2.11:2.3.1')
    //hadoop
    compile('org.apache.hadoop:hadoop-client:3.1.0') {
        exclude module: 'slf4j-log4j12'
    }
    //HBase
//    compile('org.apache.hbase:hbase-client:1.4.4') {
//        exclude module: 'slf4j-log4j12'
//    }
//    compile('org.apache.hbase:hbase-server:1.4.4') {
//        exclude module: 'slf4j-log4j12'
//    }
    //Spark Streaming
    compile('org.apache.spark:spark-streaming_2.11:2.3.1') {
        exclude module: 'slf4j-log4j12'
    }

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

protobuf {
    // Configure the protoc executable
    generatedFilesBaseDir = "$projectDir/src"
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
}

clean {
    delete protobuf.generatedFilesBaseDir
}